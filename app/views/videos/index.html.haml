.hitlist

  %h1
    Search / Browse Results

    - if params[:descriptor_value_id]
      %br
      %br
      %div
        - descriptor = DescriptorValue.find( params[:descriptor_value_id] )
        .search-within
          In
          = h(descriptor.property_type.name)
          &mdash;
          = h(descriptor.text)

  = highlight( |
    ( render :partial => "videos/index", :object => @videos ), |
    params[:search][:criteria][:text] ) |

.sidebar
  .entry
    .title Other videos
    %ul
      %li= link_to "Browse all videos", videos_path
    - if @property_type_menu
      .entry
        = render :partial => "shared/axis", :object => @property_type_menu
  .entry
    .title Refine Results
    - form_for @search, :url => videos_path, |
                        :html => { :method => :get, :id => nil } do |form| |
      %ul.refine
        %li
          = form.criterion :text, :size => 39
        %li
          %label
            = form.criterion :duration
            %span.text Duration:
        - PropertyType.browse do |type|
          %li
            %label
              = form.criterion type
              %span.text&== #{type.name}:
        - if current_user and current_user.has_role?([:admin,:cataloger])
          %li
            %label
              = form.criterion :public
              %span.text Visibility:
        %li= form.submit "refine"
  - if current_user
    .entry
      .title Tools and Services
      %ul
        - if current_user && current_user.has_role?( [ :admin, :cataloger ] )
          %li= link_to "<span>Add new video</span>", "/videos/new"
        - if current_user and params[:search]
          %li
            - form_tag saved_queries_path, :method => :post do
              %label.button.save_query
                = link_to "Save this search", "#"
              = to_form_inputs( @search.add_to_params( {}, :search ) )
              .save_query
                .title.hidden
                  %label
                    Title:
                    = text_field_tag 'search[title]', nil, :id => nil
                    = submit_tag "Save", :class => :hidden
.clear
